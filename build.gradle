buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            name = 'forge'
            url = 'http://files.minecraftforge.net/maven'
        }
        maven {
            name = 'SpongePowered'
            url = 'https://repo.spongepowered.org/repository/maven-public'
        }
    }
    dependencies {
	classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    classpath 'org.spongepowered:mixingradle:0.4-SNAPSHOT'
    classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.3'
    classpath 'com.google.code.gson:gson:2.8.6'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'com.github.johnrengelman.shadow'

version project.modVersion
group project.modGroup //http://maven.apache.org/guides/mini/guide-naming-conventions.html

sourceCompatibility = targetCompatibility = '1.8'
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = project.forgeVersion
    runDir = 'run'
    mappings = project.mcpVersion
    coreMod = 'me.ciruu.abyss.mixin.MixinLoaderForge'
    makeObfSourceJar = true

}

repositories {
    mavenCentral()
    maven {
        name = 'spongepowered-repo'
        url = 'https://repo.spongepowered.org/repository/maven-public/'
    }
    jcenter()
}

dependencies {
    compile('org.spongepowered:mixin:0.7.4-SNAPSHOT') {
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
    }
    compile 'net.minecraftforge:forge:1.12.2-14.23.5.2859'
    compile group: 'net.jodah', name: 'typetools', version: '0.5.0'
    compile(group: 'org.reflections', name: 'reflections', version: '0.9.11') {
        exclude group: 'com.google.guava', module: 'guava'
    }

    compile 'org.java-websocket:Java-WebSocket:1.5.3'

    compile 'org.jetbrains.kotlin:kotlin-stdlib:1.7.21'
    compile 'org.jetbrains.kotlin:kotlin-reflect:1.7.21'
}

processResources {
    inputs.property 'version', project.version
    inputs.property 'mcversion', project.minecraft.version
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }
    rename '(.+_at.cfg)', 'META-INF/$1'
}

shadowJar {
    dependencies {
        include(dependency('org.spongepowered:mixin'))
        include(dependency('club.minnced:java-discord-rpc'))
        include(dependency('net.jodah:typetools'))
        include(dependency('org.yaml:snakeyaml'))
        include(dependency('org.javassist:javassist'))
        include(dependency('org.jetbrains.kotlin:kotlin-stdlib:1.2.71'))
        include(dependency('org.jetbrains.kotlin:kotlin-reflect:1.2.71'))
        include(dependency('org.yaml:snakeyaml'))
        include(dependency('org.reflections:reflections'))
        include(dependency("org.java-websocket:Java-WebSocket:1.5.3"))
    }
    exclude 'dummyThing'
    exclude 'LICENSE.txt'
    classifier = 'release'
}


mixin {
    defaultObfuscationEnv searge
    add sourceSets.main, 'mixins.salhack.refmap.json'
}

reobf {
    shadowJar {
        mappingType = 'SEARGE'
        classpath = sourceSets.main.compileClasspath
    }
}

jar {
    manifest {
        attributes(
                'MixinConfigs': 'mixins.abyss.json',
                'tweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
                'TweakOrder': 0,
                'FMLCorePluginContainsFMLMod': 'true',
                'FMLCorePlugin': 'me.ciruu.abyss.mixin.MixinLoaderForge',
                'ForceLoadAsMod': 'true',
                'FMLAT': 'abyss_at.cfg'
        )
    }

}
